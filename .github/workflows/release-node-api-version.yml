name: release-node-api-version
on:
  workflow_run:
    workflows: ["release-api-version"]
    branches:
      - multi_tenant_stage
      - multi_tenant_prod
      - multi_tenant_dev
    types:
      - completed
        
permissions:
  id-token: write 
  contents: read
  pull-requests: write
  security-events: write
  actions: read

jobs:
  trigger-release-node-api-version-workflow:
    name: Trigger release node-api version workflow
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set ref dynamically
        id: set-ref
        run: echo "::set-output name=ref::$(git rev-parse HEAD)"

      - name: echo branch name
        run: |
          echo ${{ steps.set-ref.outputs.ref }}

      - name: run node-api release version workflow
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          gh workflow run release-version.yml --repo prashant-cloudbolt/workflow-target --ref ${{ steps.set-ref.outputs.ref }}
















# name: Create a Release of content-library
# # Tests, builds the vue app, bundles it into a xui, creates a release, uploads the xui to release, and triggers a publish.

# on:
#   workflow_call:
#     inputs:
#       environment:
#         description: Staging (creates pre-release publishing to Staging bucket) or Production (creates release publishing to Production bucket)
#         default: Staging
#         type: string
#       publish:
#         description: Should the workflow publish the new release to the content library?
#         default: false
#         type: boolean

#   workflow_dispatch:
#     inputs:
#       environment:
#         description: Staging (creates pre-release publishing to Staging bucket) or Production (creates release publishing to Production bucket)
#         required: true
#         default: Staging
#         type: choice
#         options:
#           - Staging
#           - Production
#       publish:
#         description: Should the workflow publish the new release to the content library?
#         default: false
#         type: boolean

# # This allows a subsequently queued workflow run to interrupt previous runs
# concurrency:
#   group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
#   cancel-in-progress: true

# jobs:
#   publish:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Dispatch an action and get the run ID
#         uses: codex-/return-dispatch@v1
#         id: return_dispatch
#         with:
#           token: ${{ secrets.GH_TOKEN }}
#           ref: main
#           repo: workflow-target
#           owner: prashant-cloudbolt
#           workflow: generate-artifacts.yml
#           workflow_inputs: '{ "publish": "${{ inputs.publish }}", "environment": "${{ inputs.environment }}" }'

#       - name: Watch generate-artifacts run
#         continue-on-error: true
#         env:
#           GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
#         run: |
#           RUN_ID=${{ steps.return_dispatch.outputs.run_id }}
#           gh run watch $RUN_ID --repo prashant-cloudbolt/workflow-target

#       # - name: Use the output run ID
#       #   run: echo ${{steps.return_dispatch.outputs.run_id}}
